| # All the data below will be stored as a string object
  #cloud-config, see http://cloudinit.readthedocs.io/en/latest/topics/examples.html

  ssh_pwauth: True
  users:
   - name: vagrant
     sudo: ALL=(ALL) NOPASSWD:ALL
     shell: /bin/bash
  chpasswd:
   list: |
    vagrant:vagrant
   expire: False

  bootcmd:
   # Block access to SSH while node is preparing
   - cloud-init-per once sudo iptables -A INPUT -p tcp --dport 22 -j DROP
  output:
    all: '| tee -a /var/log/cloud-init-output.log /dev/tty0'

  runcmd:
   # Configure dhclient
   - sudo echo "nameserver {gateway}" >> /etc/resolvconf/resolv.conf.d/base
   - sudo resolvconf -u

   # Prepare network connection
   - sudo ifup {interface_name}
   - sudo route add default gw {gateway} {interface_name}
   - sudo ifup ens4

   ############## TCP Cloud cfg01 node ##################
   - echo "Preparing base OS"
   - which wget >/dev/null || (apt-get update; apt-get install -y wget)

   - echo "deb [arch=amd64] http://apt.tcpcloud.eu/nightly/ trusty main security extra tcp tcp-salt" > /etc/apt/sources.list
   - wget -O - http://apt.tcpcloud.eu/public.gpg | apt-key add -

   - apt-get clean
   - apt-get update
   - apt-get -y upgrade

   # Install common packages
   - apt-get install -y python-pip
   - apt-get install -y curl tmux byobu iputils-ping traceroute htop tree

   - echo "Configuring salt master ..."
   - apt-get install -y salt-master reclass
   - apt-get install -y salt-formula-*

   - |
       cat << 'EOF' >> /etc/salt/master.d/master.conf
       file_roots:
         base:
         - /usr/share/salt-formulas/env
       pillar_opts: False
       open_mode: True
       reclass: &reclass
         storage_type: yaml_fs
         inventory_base_uri: /srv/salt/reclass
       ext_pillar:
         - reclass: *reclass
       master_tops:
         reclass: *reclass
       EOF

   - echo "Configuring reclass ..."
   - git clone https://github.com/Mirantis/mk-lab-salt-model.git /srv/salt/reclass -b master

   - mkdir -p /srv/salt/reclass/classes/service
   - for i in /usr/share/salt-formulas/reclass/service/*; do ln -s $i /srv/salt/reclass/classes/service/; done

   - '[ ! -d /etc/reclass ] && mkdir /etc/reclass'
   - |
       cat << 'EOF' >> /etc/reclass/reclass-config.yml
       storage_type: yaml_fs
       pretty_print: True
       output: yaml
       inventory_base_uri: /srv/salt/reclass
       EOF

   - echo "Configuring salt minion ..."
   - apt-get install -y salt-minion
   - '[ ! -d /etc/salt/minion.d ] && mkdir -p /etc/salt/minion.d'

   - |
       cat << "EOF" >> /etc/salt/minion.d/minion.conf
       id: {hostname}
       master: localhost
       EOF

   - echo "Restarting services ..."
   - service salt-master restart
   - rm -f /etc/salt/pki/minion/minion_master.pub
   - service salt-minion restart

   - echo "Showing system info and metadata ..."
   #- salt-call --no-color grains.items
   #- salt-call --no-color pillar.data
   - reclass -n {hostname}

   #- echo "Running complete state ..."
   #- salt-call --no-color state.sls linux openssh salt.minion
   #- salt-call --no-color state.sls salt.master
   #- service salt-minion restart
   #salt-call --no-color state.highstate

   ########################################################
   # Node is ready, allow SSH access
   - echo "Allow SSH access ..."
   - sudo iptables -D INPUT -p tcp --dport 22 -j DROP
   ########################################################

  write_files:
   - path: /etc/network/interfaces.d/99-fuel-ccp-tests.cfg
     content: |
          auto ens3
          iface ens3 inet dhcp

          # 2nd interface should be UP without IP address
          auto ens4
          iface ens4 inet manual
              pre-up ifconfig $IFACE up
              post-down ifconfig $IFACE down
